# Manage a surveillance system

scene:
  - id: "Camera - Detection on"
    name: camera_detection_on
    icon: mdi:cctv
    entities:
      switch.einfahrt_ftp_upload: "on"
      switch.einfahrt_push_notifications: "on"
      switch.einfahrt_record: "on"
      switch.einfahrt_record_audio: "on"
      switch.garage_ftp_upload: "on"
      switch.garage_push_notifications: "on"
      switch.garage_record: "on"
      switch.garage_record_audio: "on"
      # switch.innen_ftp_upload: "on"
      # switch.innen_push_notifications: "on"
      # switch.innen_record: "on"
      # switch.innen_record_audio: "on"
      switch.terrasse_ftp_upload: "on"
      switch.terrasse_push_notifications: "on"
      switch.terrasse_record: "on"
      switch.terrasse_record_audio: "on"
      switch.alfa03: "on"

# Automations #######################################################
automation:
  # Отправка файлов в Telegram
  - id: camera_upload_to_telegram
    alias: Camera - Upload to Telegram
    description: Отправка файлов в Telegram
    mode: parallel
    triggers:
      trigger: event
      event_type: folder_watcher
      event_data:
        event_type: closed

    conditions:
      condition: template
      value_template: "{{ 'cams' in trigger.event.data.path }}"

    actions:
      - choose:
          - conditions:
              - condition: template
                value_template: >
                  {{ trigger.event.data.path is search("\d\.mp4$") }}
            sequence:
              - action: shell_command.cam_convert
                data:
                  file_in: "{{ trigger.event.data.path }}"
                  file_out: >
                    {{ trigger.event.data.path | regex_replace( find="\.mp4$", replace="e.mp4", ignorecase=False ) }}

          - conditions:
              - condition: template
                value_template: "{{ 'e.mp4' in trigger.event.data.path }}"
            sequence:
              - action: notify.telegram_schick_home
                data:
                  title: Surveillance
                  message: "Bewegung erkannt!"
                  data:
                    video:
                      - file: "{{ trigger.event.data.path }}"
                        caption: >-
                          {% if 'cam1' in trigger.event.data.folder %}
                            🏃 *Terrasse* Bewegung
                          {% elif 'cam2' in trigger.event.data.folder %}
                            🚗 *Garage* Bewegung
                          {% elif 'cam3' in trigger.event.data.folder %}
                            🏠 *Einfahrt* Bewegung
                          {% else %}
                            🏃 *Bewegung erkannt!*
                          {% endif -%}
                        timeout: 1000
              - action: shell_command.cam_remove_file
                data:
                  file_in: >
                    {{ trigger.event.data.path | regex_replace( find="e\.mp4$", replace=".mp4", ignorecase=False ) }}

          - conditions:
              - condition: template
                value_template: "{{ '.jpg' in trigger.event.data.path }}"
            sequence:
              - action: notify.telegram_schick_home
                data:
                  title: Surveillance
                  message: "Bewegung erkannt!"
                  data:
                    photo:
                      - file: "{{ trigger.event.data.path }}"
                        caption: >-
                          {% if 'cam1' in trigger.event.data.folder %}
                            🏃 *Terrasse* Bewegung
                          {% elif 'cam2' in trigger.event.data.folder %}
                            🚗 *Garage* Bewegung
                          {% elif 'cam3' in trigger.event.data.folder %}
                            🏠 *Einfahrt* Bewegung
                          {% else %}
                            🏃 *Bewegung erkannt!*
                          {% endif -%}

  - id: camera_surveillance_management
    alias: "Camera - Surveillance Management"
    triggers:
      - trigger: state
        entity_id: group.family
        for: "00:04:00"

      - trigger: time_pattern
        minutes: "/15"

    conditions:
      - "{{ (now().hour < 12 or now().hour > 22)
        or is_state('group.family', 'not_home') }}"

    actions:
      - action: scene.turn_on
        target:
          entity_id: scene.camera_detection_on

  # PTZ control with buttons
  - id: camera_ptz_buttons_control
    alias: "Camera - PTZ buttons control"
    triggers:
      trigger: state
      entity_id:
        - button.garage_ptz_up
        - button.garage_ptz_down
        - button.garage_ptz_left
        - button.garage_ptz_right
        - button.garage_ptz_zoom_in
        - button.garage_ptz_zoom_out
        - button.innen_ptz_up
        - button.innen_ptz_down
        - button.innen_ptz_left
        - button.innen_ptz_right
        - button.innen_ptz_zoom_in
        - button.innen_ptz_zoom_out

    actions:
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 000
      - action: button.press
        entity_id: button.garage_ptz_stop
      - action: button.press
        entity_id: button.innen_ptz_stop

# Script ############################################################
script:
  camera_ptz:
    alias: Camera - PTZ Control
    icon: mdi:arrow-all
    sequence:
      - action: reolink_cctv.ptz_control
        data:
          entity_id: "{{ entity_id }}"
          command: "{{ command }}"

      - delay: "00:00:01"

      - action: reolink_cctv.ptz_control
        data:
          entity_id: "{{ entity_id }}"
          command: STOP

homeassistant:
  customize:
    automation.camera_upload_to_telegram:
      icon: mdi:send
    automation.camera_surveillance_management:
      icon: mdi:cctv
