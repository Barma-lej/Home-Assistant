# Garage
# Control

# Recorder
recorder:
  exclude:
    entities:
      - sensor.tor_esphome_version
      - sensor.tor_uptime
      - input_boolean.torteil

# Logbook
logbook:
  exclude:
    entities:
      - sensor.tor_esphome_version
      - sensor.tor_uptime
      - input_boolean.torteil

# Input
input_boolean:
  torteil:
    name: "Tor Teiloffnung"
    icon: mdi:garage-alert

# Template Sensors
template:
  - binary_sensor:
      - name: "Garage Open Too Long"
        unique_id: garage_open_too_long # Unique ID for Home Assistant
        state: >
          {{ states('cover.tor') == 'open' and 
            state_attr('cover.tor', 'current_position') | int(0) > 13 }}
        delay_on:
          minutes: 30 # Turns on after the condition is true for 30 minutes
        # Turns off as soon as the condition is false

# Automations
automation:
  - id: torteiloffnung_on
    alias: Garage - Torteiloffnung ON
    triggers:
      - trigger: state
        entity_id: switch.torteil
        to: "on"

    conditions:
      - condition: state
        entity_id: input_boolean.torteil
        state: "off"

    actions:
      - delay:
          seconds: 2
      - alias: ""
        action: input_boolean.turn_on
        data:
          entity_id: input_boolean.torteil

  #- id: 'torteil_off'
  #  alias: Torteiloffnung OFF
  #  description: ''
  #  triggers:
  #  - entity_id: binary_sensor.tor_geoffnet
  #    trigger: state
  #    to: 'on'
  #  conditions:
  #  - condition: state
  #    entity_id: input_boolean.torteil
  #    state: 'on'
  #  actions:
  #  - alias: ''
  #    action: homeassistant.turn_off
  #    data:
  #      entity_id: input_boolean.torteil

  - id: telegram_tor
    alias: "Telegram - Tor"
    mode: restart
    triggers:
      - trigger: event
        event_type: telegram_command
        event_data:
          command: "/tor"
      - trigger: event
        event_type: telegram_command
        event_data:
          command: "/torteil"

      - trigger: event
        event_type: telegram_callback
        event_data:
          command: "/tor"
      - trigger: event
        event_type: telegram_callback
        event_data:
          command: "/torteil"

    actions:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.command == '/tor' }}"
            sequence:
              - action: switch.toggle
                data:
                  entity_id: switch.tor

              - wait_for_trigger:
                  - trigger: state
                    entity_id: cover.tor
                timeout: "00:00:05"
                continue_on_timeout: true

              - action: script.telegram_callback
                data:
                  target: "{{ trigger.event.data.chat_id }}"
                  message_id: "{{ trigger.event.data.message.message_id if trigger.event.event_type == 'telegram_callback' else 1000 }}"
                  message: "{{ state_attr('switch.tor', 'friendly_name') }} - {{ state_attr('cover.tor', 'current_position') }}%"

          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.command == '/torteil' }}"
            sequence:
              - action: switch.toggle
                data:
                  entity_id: switch.torteil

              - wait_for_trigger:
                  - trigger: state
                    entity_id: cover.tor
                timeout: "00:00:05"
                continue_on_timeout: true

              - action: script.telegram_callback
                data:
                  target: "{{ trigger.event.data.chat_id }}"
                  message_id: "{{ trigger.event.data.message.message_id if trigger.event.event_type == 'telegram_callback' else 1000 }}"
                  message: "{{ state_attr('switch.torteil', 'friendly_name') }} - {{ state_attr('cover.tor', 'current_position') }}%"

  - id: garage_auto_close
    alias: "Garage - Autoschlie√üen"
    description: "–ì–∞—Ä–∞–∂ - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ (–æ—Ç–∫—Ä—ã—Ç >13% –±–æ–ª–µ–µ 30 –º–∏–Ω, —Ç–µ–º–Ω–æ, —Å–≤–µ—Ç –≤—ã–∫–ª)"
    mode: single # –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤

    # Triggers when any of the key conditions might lead to an auto-close scenario
    triggers:
      - trigger: state
        entity_id: binary_sensor.garage_open_too_long # Helper sensor turns on
        to: "on"
      - trigger: state
        entity_id: sun.sun
        to: "below_horizon" # It becomes dark
      - trigger: state
        entity_id: binary_sensor.all_lights_off
        to: "on" # All relevant lights turn off
      - trigger: homeassistant
        event: start # Check conditions when Home Assistant starts

    condition:
      # All these conditions must be true for the actions to run
      - condition: state
        entity_id: sun.sun
        state: "below_horizon" # –£—Å–ª–æ–≤–∏–µ "—Ç–µ–º–Ω–æ"
      - condition: state
        entity_id: binary_sensor.all_lights_off # –£—Å–ª–æ–≤–∏–µ "–≤–µ–∑–¥–µ –≤—ã–∫–ª—é—á–µ–Ω —Å–≤–µ—Ç"
        state: "on" # 'on' –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤—Å–µ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∏ –≤—ã–∫–ª—é—á–µ–Ω—ã
      - condition: state
        entity_id: binary_sensor.garage_open_too_long # Garage has been open >13% for over 30 mins
        state: "on"

    actions:
      - variables:
          initial_pos: "{{ state_attr('cover.tor', 'current_position') | int }}"

      - action: notify.telegram_schick_home
        data:
          title: "üöó–ì–∞—Ä–∞–∂"
          message: "–ì–∞—Ä–∞–∂ –æ—Ç–∫—Ä—ã—Ç —É–∂–µ 30 –º–∏–Ω—É—Ç, —Å–µ–π—á–∞—Å —Ç–µ–º–Ω–æ –∏ —Å–≤–µ—Ç –≤–µ–∑–¥–µ –≤—ã–∫–ª—é—á–µ–Ω. –ü–ª–∞–Ω–∏—Ä—É—é –∑–∞–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É. –°–≤–µ—Ç –±—É–¥–µ—Ç –º–∏–≥–∞—Ç—å. –ï—Å–ª–∏ –≤–æ—Ä–æ—Ç–∞ —Å–¥–≤–∏–Ω—É—Ç—Å—è –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 10%, –∑–∞–∫—Ä—ã—Ç–∏–µ –æ—Ç–º–µ–Ω–∏—Ç—Å—è."

      # –ú–∏–Ω—É—Ç–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ —Å –º–∏–≥–∞–Ω–∏–µ–º —Å–≤–µ—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ—Ç–º–µ–Ω—ã
      - alias: "–ú–∏–Ω—É—Ç–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ —Å –º–∏–≥–∞–Ω–∏–µ–º –∏ –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ—Ç–º–µ–Ω—ã"
        repeat:
          count: 12 # 12 —Ü–∏–∫–ª–æ–≤ * 5 —Å–µ–∫—É–Ω–¥ = 60 —Å–µ–∫—É–Ω–¥
          sequence:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–º–µ–Ω—ã –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –º–∏–≥–∞–Ω–∏–µ–º
            - choose:
                - conditions:
                    - condition: template
                      value_template: >
                        {% set current_pos = state_attr('cover.tor', 'current_position') | int(0) %}
                        {{ (current_pos - initial_pos) | abs > 10 }}
                  sequence:
                    - action: notify.telegram_schick_home
                      data:
                        title: "üöó–ì–∞—Ä–∞–∂"
                        message: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –≥–∞—Ä–∞–∂–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤–æ—Ä–æ—Ç –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 10%."
                    - stop: "–ó–∞–∫—Ä—ã—Ç–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è –≤–æ—Ä–æ—Ç"
            # –ú–∏–≥–∞–Ω–∏–µ —Å–≤–µ—Ç–æ–º
            - action: light.turn_on
              target:
                entity_id: light.sonoffbnsz01
              data: {} # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —è–≤–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ light.turn_on —Ç—Ä–µ–±—É–µ—Ç
            - delay:
                seconds: 2.5 # –°–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω
            - action: light.turn_off
              target:
                entity_id: light.sonoffbnsz01
              data: {} # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —è–≤–Ω–æ—Å—Ç–∏
            - delay:
                seconds: 2.5 # –°–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω (–æ–±—â–∏–π —Ü–∏–∫–ª 5 —Å–µ–∫—É–Ω–¥)

      # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∞ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç)
      - condition: template
        value_template: >
          {% set current_pos = state_attr('cover.tor', 'current_position') | int(0) %}
          {{ (current_pos - initial_pos) | abs <= 10 }}
      - condition: template # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤–æ—Ä–æ—Ç–∞ –≤—Å–µ –µ—â–µ –æ—Ç–∫—Ä—ã—Ç—ã –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —É—Å–ª–æ–≤–∏—é
        value_template: "{{ states('cover.tor') == 'open' and state_attr('cover.tor', 'current_position') | int(0) > 13 }}"

      - action: notify.telegram_schick_home
        data:
          title: "üöó–ì–∞—Ä–∞–∂"
          message: "–ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –≥–∞—Ä–∞–∂–∞..."

      # –ü–æ–ø—ã—Ç–∫–∞ 1
      - alias: "–ó–∞–∫—Ä—ã—Ç–∏–µ –≥–∞—Ä–∞–∂–∞ - –ü–æ–ø—ã—Ç–∫–∞ 1"
        action: switch.toggle
        target:
          entity_id: switch.tor
      - delay:
          seconds: 3 # –î–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è

      - choose:
          # –£—Å–ø–µ—Ö: –≤–æ—Ä–æ—Ç–∞ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è –∏–ª–∏ —É–∂–µ –∑–∞–∫—Ä—ã—Ç—ã
          - conditions:
              - "{{ states('cover.tor') == 'closing' or states('cover.tor') == 'closed' }}"
            sequence:
              - action: notify.telegram_schick_home
                data:
                  title: "üöó–ì–∞—Ä–∞–∂"
                  message: "–í–æ—Ä–æ—Ç–∞ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è/–∑–∞–∫—Ä—ã—Ç—ã –ø–æ—Å–ª–µ 1-–π –∫–æ–º–∞–Ω–¥—ã."
          # –ù–µ—É–¥–∞—á–∞: –≤–æ—Ä–æ—Ç–∞ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –∏–ª–∏ –≤—Å–µ –µ—â–µ –æ—Ç–∫—Ä—ã—Ç—ã (–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã)
          - conditions:
              - "{{ states('cover.tor') == 'opening' or states('cover.tor') == 'open' }}"
            sequence:
              - action: notify.telegram_schick_home
                data:
                  title: "üöó–ì–∞—Ä–∞–∂"
                  message: "–ü–æ—Å–ª–µ 1-–π –∫–æ–º–∞–Ω–¥—ã, –≤–æ—Ä–æ—Ç–∞ {{ states('cover.tor') }}. –û—Ç–ø—Ä–∞–≤–ª—è—é 2-—é –∫–æ–º–∞–Ω–¥—É..."
              # –ü–æ–ø—ã—Ç–∫–∞ 2:
              # –ï—Å–ª–∏ –±—ã–ª–æ 'opening', —ç—Ç–æ –±—É–¥–µ—Ç 'stop'.
              # –ï—Å–ª–∏ –±—ã–ª–æ 'open' (stopped), —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'close'.
              - alias: "–ó–∞–∫—Ä—ã—Ç–∏–µ –≥–∞—Ä–∞–∂–∞ - –ü–æ–ø—ã—Ç–∫–∞ 2"
                action: switch.toggle
                target:
                  entity_id: switch.tor
              - delay:
                  seconds: 3

              - choose:
                  # –£—Å–ø–µ—Ö —Å–æ 2-–π –ø–æ–ø—ã—Ç–∫–∏
                  - conditions:
                      - "{{ states('cover.tor') == 'closing' or states('cover.tor') == 'closed' }}"
                    sequence:
                      - action: notify.telegram_schick_home
                        data:
                          title: "üöó–ì–∞—Ä–∞–∂"
                          message: "–í–æ—Ä–æ—Ç–∞ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è/–∑–∞–∫—Ä—ã—Ç—ã –ø–æ—Å–ª–µ 2-–π –∫–æ–º–∞–Ω–¥—ã."
                  # –ù–µ—É–¥–∞—á–∞: –≤–æ—Ä–æ—Ç–∞ –≤—Å–µ –µ—â–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è, –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—ã (–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã) –ø–æ—Å–ª–µ 2-–π –ø–æ–ø—ã—Ç–∫–∏
                  - conditions:
                      - "{{ states('cover.tor') == 'opening' or states('cover.tor') == 'open' }}"
                    sequence:
                      - action: notify.telegram_schick_home
                        data:
                          title: "üöó–ì–∞—Ä–∞–∂"
                          message: "–ü–æ—Å–ª–µ 2-–π –∫–æ–º–∞–Ω–¥—ã, –≤–æ—Ä–æ—Ç–∞ {{ states('cover.tor') }}. –û—Ç–ø—Ä–∞–≤–ª—è—é 3-—é –∫–æ–º–∞–Ω–¥—É..."
                      # –ü–æ–ø—ã—Ç–∫–∞ 3:
                      # –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—ã–ª–∞: open -> stop -> (—ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å close)
                      - alias: "–ó–∞–∫—Ä—ã—Ç–∏–µ –≥–∞—Ä–∞–∂–∞ - –ü–æ–ø—ã—Ç–∫–∞ 3"
                        action: switch.toggle
                        target:
                          entity_id: switch.tor
                      - delay:
                          seconds: 3 # –î–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é
                      - action: notify.telegram_schick_home
                        data:
                          title: "üöó–ì–∞—Ä–∞–∂"
                          message: "3-—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {{ states('cover.tor') }}. –û–∂–∏–¥–∞—é –ø–æ–ª–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è."
                default: # –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ 2-–π –ø–æ–ø—ã—Ç–∫–∏
                  - action: notify.telegram_schick_home
                    data:
                      title: "üöó–ì–∞—Ä–∞–∂ - –û—à–∏–±–∫–∞"
                      message: "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ—Ä–æ—Ç {{ states('cover.tor') }} –ø–æ—Å–ª–µ 2-–π –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è."
        default: # –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ 1-–π –ø–æ–ø—ã—Ç–∫–∏
          - action: notify.telegram_schick_home
            data:
              title: "üöó–ì–∞—Ä–∞–∂ - –û—à–∏–±–∫–∞"
              message: "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ—Ä–æ—Ç {{ states('cover.tor') }} –ø–æ—Å–ª–µ 1-–π –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è."

      # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –≤–æ—Ä–æ—Ç (–º–æ–Ω–∏—Ç–æ—Ä–∏–º cover.tor)
      - wait_for_trigger:
          - trigger: state
            entity_id: cover.tor
            to: "closed"
        timeout:
          minutes: 2 # –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è (–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥ —Å–≤–æ–∏ –≤–æ—Ä–æ—Ç–∞)
        continue_on_timeout: true # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–∞–π–º–∞—É—Ç

      # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
      - variables:
          garage_closed_successfully: "{{ wait.trigger is not none and states('cover.tor') == 'closed' }}"
      - action: notify.telegram_schick_home
        data:
          title: "üöó–ì–∞—Ä–∞–∂"
          message: >
            {% if garage_closed_successfully %}
              –ì–∞—Ä–∞–∂ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
            {% else %}
              –ì–∞—Ä–∞–∂ –Ω–µ –∑–∞–∫—Ä—ã–ª—Å—è (—Å–æ—Å—Ç–æ—è–Ω–∏–µ: {{ states('cover.tor') }}, –ø–æ–∑–∏—Ü–∏—è: {{ state_attr('cover.tor', 'current_position') }}%) –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è.
            {% endif %}

# Customize
homeassistant:
  customize:
    # Sensors
    sensor.tor_wifi_signal:
      unit_of_measurement: "dBm"
    cover.tor:
      icon: mdi:garage
