# Garage
# Control

# Recorder ##########################################################
recorder:
  exclude:
    entities:
      - sensor.tor_esphome_version
      - sensor.tor_uptime
      - input_boolean.torteil

# Logbook ###########################################################
logbook:
  exclude:
    entities:
      - sensor.tor_esphome_version
      - sensor.tor_uptime
      - input_boolean.torteil

# Input ############################################################
input_boolean:
  torteil:
    name: "Tor Teiloffnung"
    icon: mdi:garage-alert

# Automations #######################################################
automation:
  - id: torteiloffnung_on
    alias: Garage - Torteiloffnung ON
    triggers:
      - trigger: state
        entity_id: switch.torteil
        to: "on"

    conditions:
      - condition: state
        entity_id: input_boolean.torteil
        state: "off"

    actions:
      - delay:
          seconds: 2
      - alias: ""
        action: input_boolean.turn_on
        data:
          entity_id: input_boolean.torteil

  #- id: 'torteil_off'
  #  alias: Torteiloffnung OFF
  #  description: ''
  #  triggers:
  #  - entity_id: binary_sensor.tor_geoffnet
  #    trigger: state
  #    to: 'on'
  #  conditions:
  #  - condition: state
  #    entity_id: input_boolean.torteil
  #    state: 'on'
  #  actions:
  #  - alias: ''
  #    action: homeassistant.turn_off
  #    data:
  #      entity_id: input_boolean.torteil

  - id: telegram_tor
    alias: "Telegram - Tor"
    mode: restart
    triggers:
      - trigger: event
        event_type: telegram_command
        event_data:
          command: "/tor"
      - trigger: event
        event_type: telegram_command
        event_data:
          command: "/torteil"

      - trigger: event
        event_type: telegram_callback
        event_data:
          command: "/tor"
      - trigger: event
        event_type: telegram_callback
        event_data:
          command: "/torteil"

    actions:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.command == '/tor' }}"
            sequence:
              - action: switch.toggle
                data:
                  entity_id: switch.tor

              - wait_for_trigger:
                  - trigger: state
                    entity_id: cover.tor
                timeout: "00:00:05"
                continue_on_timeout: true

              - action: script.telegram_callback
                data:
                  target: "{{ trigger.event.data.chat_id }}"
                  message_id: "{{ trigger.event.data.message.message_id if trigger.event.event_type == 'telegram_callback' else 1000 }}"
                  message: "{{ state_attr('switch.tor', 'friendly_name') }} - {{ state_attr('cover.tor', 'current_position') }}%"

          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.command == '/torteil' }}"
            sequence:
              - action: switch.toggle
                data:
                  entity_id: switch.torteil

              - wait_for_trigger:
                  - trigger: state
                    entity_id: cover.tor
                timeout: "00:00:05"
                continue_on_timeout: true

              - action: script.telegram_callback
                data:
                  target: "{{ trigger.event.data.chat_id }}"
                  message_id: "{{ trigger.event.data.message.message_id if trigger.event.event_type == 'telegram_callback' else 1000 }}"
                  message: "{{ state_attr('switch.torteil', 'friendly_name') }} - {{ state_attr('cover.tor', 'current_position') }}%"

# Customize #########################################################
homeassistant:
  customize:
    # Sensor ##########
    sensor.tor_wifi_signal:
      unit_of_measurement: "dBm"
    cover.tor:
      icon: mdi:garage
