# Automations and scripts for covers

# Cover #############################################################
cover:
  - platform: group
    unique_id: rolladen
    name: rolladen
    entities:
      - cover.shellyswitch25_f37a8c
      - cover.shellyswitch25_f37b28
      - cover.shellyswitch25_10eaa4
      - cover.shellyswitch25_10d315

# Input Text ########################################################
input_text:
  rolladen_last_action:
    name: Rolladen - Last action of the rollade groups
    initial: opening
    icon: mdi:window-shutter-open
  shellyswitch25_f37a8c_last_action:
    name: Rolladen - Last action of the rollade 1
    initial: opening
    icon: mdi:window-shutter-open
  shellyswitch25_f37b28_last_action:
    name: Rolladen - Last action of the rollade 2
    initial: opening
    icon: mdi:window-shutter-open
  shellyswitch25_10eaa4_last_action:
    name: Rolladen - Last action of the rollade 3
    initial: opening
    icon: mdi:window-shutter-open
  shellyswitch25_10d315_last_action:
    name: Rolladen - Last action of the rollade 4
    initial: opening
    icon: mdi:window-shutter-open

# Automation ########################################################
automation:
  # Rolladen group last action
  - id: set_rolladen_last_action
    alias: Rolladen - Set last action
    mode: parallel
    triggers:
      - trigger: state
        entity_id:
          - cover.rolladen
          - cover.shellyswitch25_10d315
          - cover.shellyswitch25_10eaa4
          - cover.shellyswitch25_f37a8c
          - cover.shellyswitch25_f37b28

    conditions:
      - condition: or
        conditions:
          - "{{ trigger.from_state.state == 'opening' }}"
          - "{{ trigger.from_state.state == 'closing' }}"

    actions:
      - action: input_text.set_value
        target:
          entity_id: input_text.{{ trigger.to_state.object_id }}_last_action
        data:
          value: "{{ trigger.from_state.state }}"

# Scripts ###########################################################
script:
  #######################################
  # Script to control covers with one button.
  # Open -> Stop -> Close -> Stop -> Open
  # is passed:
  #   {{ entity_id }}
  #######################################
  cover_one_button:
    alias: Cover - One button control
    mode: parallel
    sequence:
      - action: >
          {% if is_state("cover." ~ entity_id, "opening") or
                is_state("cover." ~ entity_id, "closing") %}
            cover.stop_cover
          {% elif is_state('input_text.' ~ entity_id ~ '_last_action', 'closing') %}
            cover.open_cover
          {% elif is_state('input_text.' ~ entity_id ~ '_last_action', 'opening') %}
            cover.close_cover
          {% else %}
            cover.stop_cover
          {% endif %}
        target:
          entity_id: cover.{{ entity_id }}

  #######################################
  # Script to control covers with two
  # buttons (open and close). If cover is
  # opening or closing and one of buttons
  # is pressed then cover stopped
  # is passed:
  #   {{ entity_id }}
  #   {{ mode }}
  #######################################
  cover_start_stop:
    alias: Cover - Two buttons control
    mode: parallel
    sequence:
      - action: >
          {% if is_state("cover." ~ entity_id, "opening") or
                is_state("cover." ~ entity_id, "closing") %}
            cover.stop_cover
          {% elif mode == "open" %}
            cover.open_cover
          {% elif mode == "close" %}
            cover.close_cover
          {% else %}
            cover.stop_cover
          {% endif %}
        target:
          entity_id: cover.{{ entity_id }}

# Customize #########################################################
homeassistant:
  customize:
    cover.rolladen:
      friendly_name: Rolladen
