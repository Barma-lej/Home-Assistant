# Worx Landroid (M500 WR141E) package
# https://github.com/Barma-lej/halandroid
# Based on Landroid Cloud by @MTrab
# https://github.com/MTrab/landroid_cloud

# Cloud #############################################################
landroid_cloud:
  email: !secret landroid_mail
  password: !secret landroid_pass

# Recorder ##########################################################
recorder:
  exclude:
    entities:
      - sensor.landroid_ip
      - sensor.landroid_sn
      - sensor.landroid_mac
      - sensor.landroid_bat
      - sensor.landroid_lastupdate
      - input_number.landroid_raindelay
      - input_number.landroid_timeextension
      - input_boolean.landroid_info_toggle
      - input_boolean.landroid_sched_settings
#      - input_boolean.landroid_0_sched_enable
#      - input_boolean.landroid_1_sched_enable
#      - input_boolean.landroid_2_sched_enable
#      - input_boolean.landroid_3_sched_enable
#      - input_boolean.landroid_4_sched_enable
#      - input_boolean.landroid_5_sched_enable
#      - input_boolean.landroid_6_sched_enable
#      - input_boolean.landroid_0_cuttoedge
#      - input_boolean.landroid_1_cuttoedge
#      - input_boolean.landroid_2_cuttoedge
#      - input_boolean.landroid_3_cuttoedge
#      - input_boolean.landroid_4_cuttoedge
#      - input_boolean.landroid_5_cuttoedge
#      - input_boolean.landroid_6_cuttoedge
#      - input_boolean.landroid_view_0
#      - input_boolean.landroid_view_1
#      - input_boolean.landroid_view_2
#      - input_boolean.landroid_view_3
#      - input_boolean.landroid_view_4
#      - input_boolean.landroid_view_5
#      - input_boolean.landroid_view_6
#      - input_boolean.landroid_view_config
      - automation.landroid_notify_status
      - automation.landroid_notify_error
      - automation.landroid_sync_values
      - script.landroid_start
      - script.landroid_stop
      - script.landroid_pause
      - script.landroid_set_config
#      - script.landroid_views_toggle

# Logbook ###########################################################
logbook:
  exclude:
    entities:
      - sensor.landroid_ip
      - sensor.landroid_sn
      - sensor.landroid_mac
      - sensor.landroid_bat
      - sensor.landroid_lastupdate
      - input_number.landroid_raindelay
      - input_number.landroid_timeextension
      - input_boolean.landroid_info_toggle
      - input_boolean.landroid_sched_settings
#      - input_boolean.landroid_0_sched_enable
#      - input_boolean.landroid_1_sched_enable
#      - input_boolean.landroid_2_sched_enable
#      - input_boolean.landroid_3_sched_enable
#      - input_boolean.landroid_4_sched_enable
#      - input_boolean.landroid_5_sched_enable
#      - input_boolean.landroid_6_sched_enable
#      - input_boolean.landroid_0_cuttoedge
#      - input_boolean.landroid_1_cuttoedge
#      - input_boolean.landroid_2_cuttoedge
#      - input_boolean.landroid_3_cuttoedge
#      - input_boolean.landroid_4_cuttoedge
#      - input_boolean.landroid_5_cuttoedge
#      - input_boolean.landroid_6_cuttoedge
#      - input_boolean.landroid_view_0
#      - input_boolean.landroid_view_1
#      - input_boolean.landroid_view_2
#      - input_boolean.landroid_view_3
#      - input_boolean.landroid_view_4
#      - input_boolean.landroid_view_5
#      - input_boolean.landroid_view_6
#      - input_boolean.landroid_view_config
      - automation.landroid_notify_status
      - automation.landroid_notify_error
      - automation.landroid_sync_values
      - script.landroid_start
      - script.landroid_stop
      - script.landroid_pause
      - script.landroid_set_config
#      - script.landroid_views_toggle

# Switch ############################################################
switch:
  - platform: template
    switches:
      landroid_mowing:
        value_template: "{{ is_state_attr('sensor.landroid_mower_status', 'status_id', 7) }}"
        turn_on:
          service: script.landroid_start
        turn_off:
          service: script.landroid_stop

# Sensor ############################################################
# sensor.landroid_mower_battery
# sensor.landroid_mower_error
# sensor.landroid_mower_status
template:
  sensor:
# Info ############
    - name: Landroid IP
      unique_id: landroid_ip
      state: !secret landroid_ip
      icon: mdi:ip-network

    - name: Landroid SN
      unique_id: landroid_sn
      state: !secret landroid_sn
      icon: mdi:numeric

    - name: Landroid MAC
      unique_id: landroid_mac
      state: !secret landroid_mac
      icon: mdi:barcode

# Status ##########
    - name: Landroid Bladetime
      unique_id: landroid_bladetime
      state: "{{ state_attr('sensor.landroid_mower_status', 'blade_time') }}"
      icon: mdi:fan
      unit_of_measurement: "min"
      attributes:
          time_formatted: >
            {% set t = state_attr("sensor.landroid_mower_status", "blade_time") | int %}
            {% if t != 0 %}
              {{ "%0d Tg. %0.02d Std. %0.02d Min." | format(t // 1440, ((t % 1440) // 60), t % 60) }}
            {% endif %}

    - name: Landroid Totaltime
      unique_id: landroid_totaltime
      state: "{{ state_attr('sensor.landroid_mower_status', 'work_time') }}"
      icon: mdi:bus-clock
      unit_of_measurement: "min"
      attributes:
        time_formatted: >
          {% set t = state_attr("sensor.landroid_mower_status", "work_time") | int %}
          {% if t != 0 %}
            {{ "%0d Tg. %0.02d Std. %0.02d Min." | format(t // 1440, ((t % 1440) // 60), t % 60) }}
          {% endif %}

    - name: Landroid Dist
      unique_id: landroid_dist
      state: "{{ (state_attr('sensor.landroid_mower_status', 'distance') | float) / 1000 }}"
      icon: mdi:map-marker-distance
      unit_of_measurement: "km"

    - name: Landroid lastupdate
      unique_id: landroid_lastupdate
      state: "{{ as_timestamp(strptime( state_attr('sensor.landroid_mower_status', 'last_update'), '%H:%M:%S %d/%m/%Y')) | timestamp_custom('%d.%m.%Y %H:%M:%S') }}"
      icon: mdi:clock

    - name: Landroid WIFI
      unique_id: landroid_wifi
      state: "{{ state_attr('sensor.landroid_mower_status', 'rssi') }}"
      device_class: signal_strength
      unit_of_measurement: "dBm"
      icon: >-
        {% set strength = state_attr("sensor.landroid_mower_status", "rssi") | float -%}
        {%- if strength > -56 -%}mdi:wifi-strength-4
        {% elif strength > -67 -%}mdi:wifi-strength-3
        {% elif strength > -78 -%}mdi:wifi-strength-2
        {% elif strength > -89 -%}mdi:wifi-strength-1
        {%- else -%}mdi:wifi-strength-outline
        {%- endif %}

    - name: Landroid Yaw
      unique_id: landroid_yaw
      state: "{{ state_attr('sensor.landroid_mower_status', 'yaw') }}"
      icon: mdi:axis-z-rotate-clockwise
      unit_of_measurement: "°"

    - name: Landroid Roll
      unique_id: landroid_roll
      state: "{{ state_attr('sensor.landroid_mower_status', 'roll') }}"
      icon: mdi:axis-x-rotate-clockwise
      unit_of_measurement: "°"

    - name: Landroid Pitch
      unique_id: landroid_pitch
      state: "{{ state_attr('sensor.landroid_mower_status', 'pitch') }}"
      icon: mdi:seat-flat-angled
      unit_of_measurement: "°"

# Input Number ######################################################
input_number:
  landroid_raindelay:
    name: Rain delay
    initial: 150
    min: 0
    max: 300
    step: 30
    unit_of_measurement: "min"
    icon: mdi:weather-lightning-rainy

  landroid_timeextension:
    name: Time extension
    initial: 0
    min: -100
    max: 100
    step: 10
    unit_of_measurement: "%"
    icon: mdi:clock-out

# Input Boolean #####################################################
input_boolean:
# Booleans for Lovelace
  landroid_sched_settings:
    name: Scheduler settings
    icon: mdi:file-hidden
    initial: false
  landroid_info_toggle:
    name: Info toggle
    icon: mdi:file-hidden
    initial: false

## Enable scheduler on weekdays
#  landroid_0_sched_enable:
#    name: Sunday
#    icon: mdi:calendar
#  landroid_1_sched_enable:
#    name: Monday
#    icon: mdi:calendar-today
#  landroid_2_sched_enable:
#    name: Tuesday
#    icon: mdi:calendar-minus
#  landroid_3_sched_enable:
#    name: Wednesday
#    icon: mdi:calendar-range
#  landroid_4_sched_enable:
#    name: Thursday
#    icon: mdi:calendar-multiselect
#  landroid_5_sched_enable:
#    name: Friday
#    icon: mdi:calendar-heart
#  landroid_6_sched_enable:
#    name: Saturday
#    icon: mdi:calendar-check
#
## Enable Cut to Edge on weekdays
#  landroid_0_cuttoedge:
#    name: Cut to Edge (0)
#    icon: mdi:scissors-cutting
#  landroid_1_cuttoedge:
#    name: Cut to Edge (1)
#    icon: mdi:scissors-cutting
#  landroid_2_cuttoedge:
#    name: Cut to Edge (2)
#    icon: mdi:scissors-cutting
#  landroid_3_cuttoedge:
#    name: Cut to Edge (3)
#    icon: mdi:scissors-cutting
#  landroid_4_cuttoedge:
#    name: Cut to Edge (4)
#    icon: mdi:scissors-cutting
#  landroid_5_cuttoedge:
#    name: Cut to Edge (5)
#    icon: mdi:scissors-cutting
#  landroid_6_cuttoedge:
#    name: Cut to Edge (6)
#    icon: mdi:scissors-cutting

## Booleans for views in Lovelace
#  landroid_view_0:
#    name: Sun.
#    icon: mdi:calendar
#  landroid_view_1:
#    name: Mon.
#    icon: mdi:calendar-today
#  landroid_view_2:
#    name: Tue.
#    icon: mdi:calendar-minus
#  landroid_view_3:
#    name: Wed.
#    icon: mdi:calendar-range
#  landroid_view_4:
#    name: Thu.
#    icon: mdi:calendar-multiselect
#  landroid_view_5:
#    name: Fri.
#    icon: mdi:calendar-heart
#  landroid_view_6:
#    name: Sat.
#    icon: mdi:calendar-check
#  landroid_view_config:
#    name: Conf.
#    icon: mdi:tools

# Automations #######################################################
automation:
# Status notificaion
  - id: landroid_notify_status
    alias: Landroid Notify Status
    initial_state: false
    trigger:
      - platform: state
        entity_id: sensor.landroid_mower_status

    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"

    action:
#      - service: persistent_notification.create
#        data:
#          title: 🏎️ Lanroid M500
#          message: "{{ trigger.from_state.state }} -> {{ trigger.to_state.state }} - {{ states('sensor.date_time') }}"
      - service: notify.telegram_schick_home
        data:
          title: 🏎️ Lanroid M500
          message: "*{{ trigger.to_state.state }}* <- {{ trigger.from_state.state }} - {{ states('sensor.date_time') }}"

# Error notificaion
  - id: landroid_notify_error
    alias: Landroid Notify Error
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.landroid_mower_error

    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"

    action:
#      - service: persistent_notification.create
#        data:
#          title: 🏎️ Lanroid M500
#          message: "{{ trigger.from_state.state }} -> {{ trigger.to_state.state }} - {{ states('sensor.date_time') }}"
      - service: notify.telegram_schick_home
        data:
          title: 🏎️ Lanroid M500
          message: "*{{ trigger.to_state.state }}* <- {{ trigger.from_state.state }} - {{ states('sensor.date_time') }}"

# Sync Landroid states
  - id: landroid_sync_values
    alias: Landroid sync values
    trigger:
      - platform: homeassistant
        event: start

      - platform: state
        entity_id: sensor.landroid_lastupdate

    action:
# Get rain delay
      - service: input_number.set_value
        data:
          entity_id: input_number.landroid_raindelay
          value: "{{ state_attr('sensor.landroid_mower_status','raindelay') | int }}"
# Get time extension
      - service: input_number.set_value
        data:
          entity_id: input_number.landroid_timeextension
          value: "{{ state_attr('sensor.landroid_mower_status','timeextension') | int }}"

# Scripts ###########################################################
# Services
# landroid_cloud.start
# landroid_cloud.stop
# landroid_cloud.pause

script:
# Starts the mower
  landroid_start:
    alias: Landroid Start
    sequence:
      service: landroid_cloud.start
      data:
        id: !secret landroid_id

# Stops the mower and sends it home
  landroid_home:
    alias: Landroid Home
    sequence:
      service: landroid_cloud.home
      data:
        id: !secret landroid_id

# Pause the mower
  landroid_pause:
    alias: Landroid Pause
    sequence:
      service: landroid_cloud.pause
      data:
        id: !secret landroid_id

# Set rain delay and time extension
  landroid_set_config:
    alias: Landroid set config
    sequence:
      service: landroid_cloud.config
      data:
        id: !secret landroid_id
        raindelay: "{{ states('input_number.landroid_raindelay') | int }}"
        timeextension: "{{ states('input_number.landroid_timeextension') | int }}"

# Select view
# Select view - add button in Lovelace
#############################
# type: button
# entity: input_boolean.landroid_view_1
# show_icon: false
# show_name: true
# tap_action:
#   action: call-service
#   service: script.landroid_views_toggle
#   service_data:
#     entity_id: input_boolean.landroid_view_1
# hold_action:
#   action: more-info
#############################
# And than add a Condition card
#############################
# type: conditional
# card:
#   type: entities
#   title: ...
#   show_header_toggle: false
#   entities:
#     - entity: ...
# conditions:
#   - entity: input_boolean.irrigation_view_cycle1
#     state: "on"
#############################

#  landroid_views_toggle:
#    sequence:
#      - service: input_boolean.turn_off
#        data:
#          entity_id: >
#            {% for item in states["input_boolean"] if item.object_id.startswith("landroid_view_") and
#                                                      item.entity_id != entity_id -%}
#              {% if not loop.first %},{% endif %}{{ item.entity_id }}
#            {%- endfor %}
#      - service: input_boolean.turn_on
#        data:
#          entity_id: "{{ entity_id }}"
