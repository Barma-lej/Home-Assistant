#Moonraker 3D printer integration

# Rest Commands #############
rest_command:
  printer_3d_emergency_stop:
    url: "http://192.168.2.18:7125/printer/emergency_stop"
    method: post
  printer_3d_firmware_restart:
    url: "http://192.168.2.18:7125/printer/firmware_restart"
    method: post
  printer_3d_cancel:
    url: "http://192.168.2.18:7125/printer/print/cancel"
    method: post
  printer_3d_pause:
    url: "http://192.168.2.18:7125/printer/print/pause"
    method: post
  printer_3d_resume:
    url: "http://192.168.2.18:7125/printer/print/resume"
    method: post
  printer_3d_server_restart:
    url: "http://192.168.2.18:7125/server/restart"
    method: post

sensor:
  - platform: rest
    name: Printer 3D - File Metadata
    unique_id: printer_3d_file_metadata
    scan_interval: 5
    resource_template: >-
      {% if states('sensor.printer_3d_state') in ('printing','paused','complete') -%}
        http://192.168.2.18:7125/server/files/metadata?filename={{ states(('sensor.printer_3d_current_print')) }}
      {%- else -%}
        https://barma.duckdns.org/local/printer_3d.json
      {%- endif %}
    json_attributes_path: "$.result"
    json_attributes:
      - filament_total
      - layer_height
      - object_height
      - thumbnails
    value_template: "{{ (state_attr('sensor.printer_3d_file_metadata','filament_total') | float(0) / 1000) | round(2) }}"
    unit_of_measurement: "m"
    icon: mdi:printer-3d-nozzle

  - platform: rest
    name: Printer 3D - State
    unique_id: printer_3d_state
    resource: "http://192.168.2.18:7125/printer/objects/query?heater_bed&extruder&print_stats&toolhead&display_status&virtual_sdcard&gcode_move&filament_switch_sensor%20RunoutSensor&temperature_sensor%20Board_MCU&temperature_sensor%20Raspberry_Pi"
    json_attributes_path: "$.result.status"
    json_attributes:
      - heater_bed
      - extruder
      - print_stats
      - toolhead
      - display_status
      - virtual_sdcard
      - gcode_move
      - "filament_switch_sensor RunoutSensor"
      - "temperature_sensor Board_MCU"
      - "temperature_sensor Raspberry_Pi"
    # value_template: "OK"
    # value_template: "{{ value_json['print_stats'] }}"
    # value_template: "{{ value_json.print_stats.state }}"
    value_template: "{{ state_attr('sensor.printer_3d_state','print_stats')['state'] }}"
    force_update: true
    scan_interval: 1
    icon: >-
      {% set val = state_attr('sensor.printer_3d_state','state') -%}
      {%- if val == 'standby' -%}
        mdi:sleep
      {%- elif val == 'error' -%}
        mdi:alert-circle
      {%- elif val == 'printing' -%}
        mdi:printer-3d-nozzle
      {%-  elif val == 'paused' -%}
        mdi:pause-circle
      {%- elif val == 'complete' -%}
        mdi:check-bold
      {%- elif val == 'ready' -%}
        mdi:printer-3d
      {%- else -%}
        mdi:help-circle
      {%- endif %}

  - platform: rest
    name: Printer 3D - Klipper State
    unique_id: printer_3d_klipper_state
    scan_interval: 1
    resource_template: "http://192.168.2.18:7125/printer/info"
    json_attributes_path: "$.result"
    json_attributes:
      - state_message
      - state
    value_template: "{{ state_attr('sensor.printer_3d_klipper_state','state') if states('sensor.printer_3d_klipper_state') else 'unknown' }}"
    icon: >-
      {%- set val = states('sensor.printer_3d_klipper_state') -%}
      {%- if val == 'standby' -%}
        mdi:sleep
      {%- elif val == 'error' -%}
        mdi:alert-circle
      {%- elif val == 'printing' -%}
        mdi:printer-3d-nozzle
      {%-  elif val == 'paused' -%}
        mdi:pause-circle
      {%- elif val == 'complete' -%}
        mdi:check-bold

      {%- elif val == 'ready' -%}
        mdi:printer-3d
      {%- elif val == 'shutdown' -%}
        mdi:printer-3d-off
      {%- else -%}
        mdi:help-circle
      {%- endif -%}

template:
  - sensor:
      # Temperature
      - name: Printer 3D - MCU Temperature
        unique_id: printer_3d_mcu_temperature
        state: "{{ state_attr('sensor.printer_3d_state','temperature_sensor Board_MCU')['temperature']}}"
        device_class: temperature
        unit_of_measurement: "°C"
        icon: mdi:thermometer
      - name: Printer 3D - Raspi Temperature
        unique_id: printer_3d_raspi_temperature
        state: "{{ state_attr('sensor.printer_3d_state','temperature_sensor Raspberry_Pi')['temperature'] }}"
        device_class: temperature
        unit_of_measurement: "°C"
        icon: mdi:thermometer

      # State
      - name: Printer 3D - Message
        unique_id: printer_3d_message
        state: "{{ state_attr('sensor.printer_3d_state','display_status')['message']}}"
        icon: mdi:message
      - name: Printer 3D - Klipper State Message
        unique_id: printer_3d_klipper_state_message
        state: "{{ state_attr('sensor.printer_3d_klipper_state','state_message') }}"
        icon: mdi:message-bookmark

      # Hotend
      - name: Printer 3D - Hotend Target
        unique_id: printer_3d_hotend_target
        state: "{{ state_attr('sensor.printer_3d_state','extruder')['target'] | float(0) | round(1) }}"
        device_class: temperature
        unit_of_measurement: "°C"
        icon: mdi:printer-3d-nozzle-heat-outline
      - name: Printer 3D - Hotend Actual
        unique_id: printer_3d_hotend_actual
        state: "{{ state_attr('sensor.printer_3d_state','extruder')['temperature'] | float(0) | round(2) }}"
        device_class: temperature
        unit_of_measurement: "°C"
        icon: mdi:printer-3d-nozzle-heat
      - name: Printer 3D - Hotend Power
        unique_id: printer_3d_hotend_power
        state: "{{ (state_attr('sensor.printer_3d_state','extruder')['power'] | float(0) * 100) | round(0) }}"
        unit_of_measurement: "%"
        icon: mdi:flash

      # Bed
      - name: Printer 3D - Bed Target
        unique_id: printer_3d_bed_target
        state: "{{ state_attr('sensor.printer_3d_state','heater_bed')['target'] | float(0) | round(1) }}"
        device_class: temperature
        unit_of_measurement: "°C"
        icon: mdi:thermometer-lines
      - name: Printer 3D - Bed Actual
        unique_id: printer_3d_bed_actual
        state: "{{ state_attr('sensor.printer_3d_state','heater_bed')['temperature'] | float(0)| round(2) }}"
        device_class: temperature
        unit_of_measurement: "°C"
        icon: mdi:thermometer-lines
      - name: Printer 3D - Bed Power
        unique_id: printer_3d_bed_power
        state: "{{ ((state_attr('sensor.printer_3d_state','heater_bed')['power'] | float(0)) * 100) | round(0) }}"
        unit_of_measurement: "%"
        icon: mdi:flash

      # Progress
      - name: Printer 3D - Print State
        unique_id: printer_3d_print_state
        state: "{{ state_attr('sensor.printer_3d_state','print_stats')['state'] }}"
        icon: mdi:file-clock-outline
      - name: Printer 3D - Filament Used
        unique_id: printer_3d_filament_used
        state: "{{ (state_attr('sensor.printer_3d_state','print_stats')['filament_used'] | float(0) / 1000) | round(2) }}"
        unit_of_measurement: "m"
        icon: mdi:printer-3d-nozzle-outline
      - name: Printer 3D - Current Progress
        unique_id: printer_3d_current_progress
        state: "{{ ((state_attr('sensor.printer_3d_state','display_status')['progress'] | float(0))*100) | round(0, 'floor') }}"
        unit_of_measurement: "%"
        icon: mdi:progress-clock
      - name: Printer 3D - Print Time
        unique_id: printer_3d_print_time
        state: "{{ state_attr('sensor.printer_3d_state','print_stats')['print_duration'] | timestamp_custom('%H:%M:%S', false) }}"
        icon: mdi:clock-fast
      - name: Printer 3D - Time Remaining
        unique_id: printer_3d_time_remaining
        state: >-
          {% set pd = state_attr('sensor.printer_3d_state','print_stats')['print_duration'] | float(0) %}
          {% set p = state_attr('sensor.printer_3d_state','display_status')['progress'] | float(0) %}
          {{ ((pd / p - pd) if p > 0 else pd ) | timestamp_custom('%H:%M:%S', false)}}
        attributes:
          timestamp: >-
            {% set pd = state_attr('sensor.printer_3d_state','print_stats')['print_duration'] | float(0) %}
            {% set p = state_attr('sensor.printer_3d_state','display_status')['progress'] | float(0) %}
            {{ (pd / p - pd) if p > 0 else pd }}
        icon: mdi:timer-sand
      - name: Printer 3D - ETA
        unique_id: printer_3d_eta
        state: "{{ (as_timestamp(now()) + (state_attr('sensor.printer_3d_time_remaining','timestamp') | float(0))) | timestamp_custom('%H:%M:%S', true) }}"
        icon: mdi:av-timer

      # Object properties
      - name: Printer 3D - Current Print
        unique_id: printer_3d_current_print
        state: "{{ state_attr('sensor.printer_3d_state','print_stats')['filename'] }}"
        icon: mdi:file-cad
      - name: Printer 3D - Object Height
        unique_id: printer_3d_object_height
        state: "{{ state_attr('sensor.printer_3d_file_metadata','object_height') | float(0) }}"
        unit_of_measurement: "mm"
        icon: mdi:arrow-expand-vertical
      - name: Printer 3D - Current Height
        unique_id: printer_3d_current_height
        state: "{{ state_attr('sensor.printer_3d_state','gcode_move')['gcode_position'][2] | float(0) | round(2) }}"
        unit_of_measurement: "mm"
        icon: mdi:arrow-expand-up

      # Layer
      - name: Printer 3D - Layer Height
        unique_id: printer_3d_layer_height
        state: >-
          {% set value = state_attr('sensor.printer_3d_file_metadata','layer_height') | float(1) %}
          {{ value if value != 0 else 1 }}
        unit_of_measurement: "mm"
        icon: mdi:arrow-collapse-vertical
      - name: Printer 3D - Current Layer
        unique_id: printer_3d_current_layer
        state: "{{ (states('sensor.printer_3d_current_height') | float(0) / states('sensor.printer_3d_layer_height') | float(1)) | round(0) }}"
        icon: mdi:arrow-collapse-up
      - name: Printer 3D - Total Layers
        unique_id: printer_3d_total_layers
        state: "{{ (states('sensor.printer_3d_object_height') | float(0) / states('sensor.printer_3d_layer_height') | float(1)) | round(0) }}"
        icon: mdi:format-line-spacing

homeassistant:
  customize:
    # Rest commands
    rest_command.printer_3d_emergency_stop:
      friendly_name: "3D Drucker - Not-Halt"
      icon: mdi:alert-octagon
    rest_command.printer_3d_firmware_restart:
      friendly_name: "3D Drucker - Firmware Neustart"
      icon: mdi:restart
    rest_command.printer_3d_cancel:
      friendly_name: "3D Drucker - Abbrechen"
      icon: mdi:close-thick
    rest_command.printer_3d_pause:
      friendly_name: "3D Drucker - Pause"
      icon: mdi:pause
    rest_command.printer_3d_resume:
      friendly_name: "3D Drucker - Fortsetzen"
      icon: mdi:play
    rest_command.printer_3d_server_restart:
      friendly_name: "3D Drucker - Server Restart"
      icon: mdi:play

    # Sensor
    sensor.printer_3d_file_metadata:
      friendly_name: "3D Drucker - Datei"
    sensor.printer_3d_state:
      friendly_name: "3D Drucker - Status"
    sensor.printer_3d_klipper_state:
      friendly_name: "3D Drucker - Klipper Status"

    sensor.printer_3d_mcu_temperature:
      friendly_name: "3D Drucker - MCU Temperatur"
    sensor.printer_3d_raspi_temperature:
      friendly_name: "3D Drucker - RaspberriPi Temperatur"

    sensor.printer_3d_message:
      friendly_name: "3D Drucker - Information"
    sensor.printer_3d_klipper_state_message:
      friendly_name: "3D Drucker - Status"

    sensor.printer_3d_hotend_target:
      friendly_name: "3D Drucker - Düse Soll"
    sensor.printer_3d_hotend_actual:
      friendly_name: "3D Drucker - Düse Aktuell"
    sensor.printer_3d_hotend_power:
      friendly_name: "3D Drucker - Düse Leistung"

    sensor.printer_3d_bed_target:
      friendly_name: "3D Drucker - Bett Soll"
    sensor.printer_3d_bed_actual:
      friendly_name: "3D Drucker - Bett Aktuell"
    sensor.printer_3d_bed_power:
      friendly_name: "3D Drucker - Bett Leistung"

    sensor.printer_3d_print_state:
      friendly_name: "3D Drucker - Druckstatus"
    sensor.printer_3d_filament_used:
      friendly_name: "3D Drucker - Filament verbraucht"
    sensor.printer_3d_current_progress:
      friendly_name: "3D Drucker - Fortschritt"
    sensor.printer_3d_print_time:
      friendly_name: "3D Drucker - Verstrichene Zeit"
    sensor.printer_3d_time_remaining:
      friendly_name: "3D Drucker - Verbleibende Zeit"
    sensor.printer_3d_eta:
      friendly_name: "3D Drucker - Geschätzte Zeit"

    sensor.printer_3d_current_print:
      friendly_name: "3D Drucker - Aktueller Druck"
    sensor.printer_3d_object_height:
      friendly_name: "3D Drucker - Objekthöhe"
    sensor.printer_3d_current_height:
      friendly_name: "3D Drucker - Aktuelle Höhe"

    sensor.printer_3d_layer_height:
      friendly_name: "3D Drucker - Schichthöhe"
    sensor.printer_3d_current_layer:
      friendly_name: "3D Drucker - Aktuelle Schicht"
    sensor.printer_3d_total_layers:
      friendly_name: "3D Drucker - Gesamtschichten"

  # Unused ####################
# camera:
#   # Octoprint: http://192.168.2.18/plugin/UltimakerFormatPackage/thumbnail/{{ states("sensor.octoprint_print_file") | replace(' ','%20') | replace('gcode','png') }}
#   # Moonraker:
#   # {{ 'http://192.168.2.18:7125/server/files/gcodes/'+state_attr('sensor.printer_3d_file_metadata','thumbnails')[1]['relative_path'] if state_attr('sensor.printer_3d_file_metadata','thumbnails')[1]['relative_path'] else 'https://barma.duckdns.org/local/images/creality-ender-3-s1-pro_blank.jpg' }}
#   - platform: generic
#     unique_id: 3d_printer_thumbnail
#     name: "3D Printer Thumbnail"
#     verify_ssl: false
#     still_image_url: >-
#       {% if state_attr('sensor.printer_3d_file_metadata','thumbnails')[1]['relative_path'] in ('') -%}
#         https://barma.duckdns.org/local/images/blank.png
#       {%- else -%}
#         http://192.168.2.18:7125/server/files/gcodes/{{ state_attr('sensor.printer_3d_file_metadata','thumbnails')[1]['relative_path'] }}
#       {%- endif %}

# # YAML config isn't more supported
# - platform: mjpeg
#   name: "Printer 3D Camera"
#   unique_id: printer_3d_camera
#   verify_ssl: false
#   still_image_url: http://192.168.2.18/webcam/?action=snapshot
#   mjpeg_url: http://192.168.2.18/webcam/?action=stream

# - platform: rest
#   scan_interval: 15
#   name: klipper_preview_path
#   resource_template: "http://192.168.2.18:7125/server/files/metadata?filename={{ states(('sensor.printer_3d_current_print')) }}"
#   json_attributes_path: "$.result.thumbnails.[1]"
#   json_attributes:
#     - relative_path
#     - width
#     - height
#     - size
#   value_template: "OK"

