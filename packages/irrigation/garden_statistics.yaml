# Groups ############################################################
group:
  irrigation_status_zone1:
    all: true
    entities:
      - switch.zone1_valve
      - switch.pump

  irrigation_status_zone2:
    all: true
    entities:
      - switch.zone2_valve
      - switch.pump

  irrigation_status_zone3:
    all: true
    entities:
      - switch.zone3_valve
      - switch.pump

# Recorder ##########################################################
#recorder:
#  exclude:
#    entities:
#      - sensor.irrigation_hs_zone1_daily
#      - sensor.irrigation_hs_zone2_daily
#      - sensor.irrigation_hs_zone3_daily
#      - sensor.irrigation_hs_pump_daily
#      - input_number.irrigation_ontime_zone1
#      - input_number.irrigation_ontime_zone2
#      - input_number.irrigation_ontime_zone3
#      - input_number.irrigation_ontime_pump
#      - input_number.irrigation_start_time_zone1
#      - input_number.irrigation_start_time_zone2
#      - input_number.irrigation_start_time_zone3
#      - input_number.irrigation_start_time_pump
#      - input_number.irrigation_last_irrigated_time
#      - automation.irrigation_set_start_time
#      - automation.irrigation_daily_to_total
#      - automation.irrigation_update_the_last_time_a_cycle_ended
#      - automation.irrigation_notify
#
## Logbook ###########################################################
#logbook:
#  exclude:
#    entities:
#      - group.irrigation_status_zone1
#      - group.irrigation_status_zone2
#      - group.irrigation_status_zone3
#      - sensor.irrigation_hs_zone1_daily
#      - sensor.irrigation_hs_zone2_daily
#      - sensor.irrigation_hs_zone3_daily
#      - sensor.irrigation_hs_pump_daily
#      - input_number.irrigation_ontime_zone1
#      - input_number.irrigation_ontime_zone2
#      - input_number.irrigation_ontime_zone3
#      - input_number.irrigation_ontime_pump
#      - input_number.irrigation_start_time_zone1
#      - input_number.irrigation_start_time_zone2
#      - input_number.irrigation_start_time_zone3
#      - input_number.irrigation_start_time_pump
#      - input_number.irrigation_last_irrigated_time
#      - automation.irrigation_set_start_time
#      - automation.irrigation_daily_to_total
#      - automation.irrigation_update_the_last_time_a_cycle_ended
#      - automation.irrigation_notify

# Sensors ###########################################################
template:
  - trigger:
    - platform: state
      entity_id:
        - group.irrigation_status_zone3
      from: "off"
      to: "on"
    sensor:
      # Keep track how many days have past since a date
      - name: Irrigation ontime zone3 today
        state: '{{ ( ( as_timestamp(now()) - as_timestamp(strptime("06.07.2018", "%d.%m.%Y")) ) / 86400 ) | round }}'
        unit_of_measurement: "Days"

sensor:
  - platform: template
    sensors:
# Daily ontime sensors
      irrigation_ontime_zone1_daily:
        friendly_name: "Zone1 ontime today"
        value_template: "{{ (states('sensor.irrigation_hs_zone1_daily') | float) | round(2) }}"
        attribute_templates:
          start_time: "{{ (states('input_number.irrigation_start_time_zone1') | int) | timestamp_custom('%d.%m.%Y %H:%M:%S') }}"
          time_formatted: >
            {% set t = states('sensor.irrigation_ontime_zone1_daily') | float *60 %}
            {{ '%0.02d:%0.02d:00' | format(t // 60, t % 60) }}
          volume_m3: "{{ (states('sensor.irrigation_ontime_zone1_daily') | float * (0.8 * 1.5)) | round(1) }}"
          wasserkosten: "{{ (states('sensor.irrigation_ontime_zone1_daily') | float * (0.8 * 1.5) * 3.94) | round(2) }}"
          energy_kwh: "{{ (states('sensor.irrigation_ontime_zone1_daily') | float * 1.02) | round(2) }}"
          stromkosten: "{{ (states('sensor.irrigation_ontime_zone1_daily') | float * 1.02 *0.32) | round(2) }}"
        unit_of_measurement: "Std"
        icon_template: mdi:water-outline

      irrigation_ontime_zone2_daily:
        friendly_name: "Zone2 ontime today"
        value_template: "{{ (states('sensor.irrigation_hs_zone2_daily') | float) | round(2) }}"
        attribute_templates:
          start_time: "{{ (states('input_number.irrigation_start_time_zone2') | int) | timestamp_custom('%d.%m.%Y %H:%M:%S') }}"
          time_formatted: >
            {% set t = states('sensor.irrigation_ontime_zone2_daily') | float *60 %}
            {{ '%0.02d:%0.02d:00' | format(t // 60, t % 60) }}
          volume_m3: "{{ (states('sensor.irrigation_ontime_zone2_daily') | float * (0.8 * 2)) | round(1) }}"
          wasserkosten: "{{ (states('sensor.irrigation_ontime_zone2_daily') | float * (0.8 * 2) * 3.94) | round(2) }}"
          energy_kwh: "{{ (states('sensor.irrigation_ontime_zone2_daily') | float * 1.02) | round(2) }}"
          stromkosten: "{{ (states('sensor.irrigation_ontime_zone2_daily') | float * 1.02 *0.32) | round(2) }}"
        unit_of_measurement: "Std"
        icon_template: mdi:water-outline

      irrigation_ontime_zone3_daily:
        friendly_name: "Zone3 ontime today"
        value_template: "{{ (states('sensor.irrigation_hs_zone3_daily') | float) | round(2) }}"
        attribute_templates:
          start_time: "{{ (states('input_number.irrigation_start_time_zone3') | int) | timestamp_custom('%d.%m.%Y %H:%M:%S') }}"
          time_formatted: >
            {% set t = states('sensor.irrigation_ontime_zone3_daily') | float *60 %}
            {{ '%0.02d:%0.02d:00' | format(t // 60, t % 60) }}
          volume_m3: "{{ (states('sensor.irrigation_ontime_zone3_daily') | float * 0.5) | round(1) }}"
          wasserkosten: "{{ (states('sensor.irrigation_ontime_zone3_daily') | float * 0.5 * 3.94) | round(2) }}"
          energy_kwh: "{{ (states('sensor.irrigation_ontime_zone3_daily') | float * 1.02) | round(2) }}"
          stromkosten: "{{ (states('sensor.irrigation_ontime_zone3_daily') | float * 1.02 *0.32) | round(2) }}"
        unit_of_measurement: "Std"
        icon_template: mdi:water-outline

      irrigation_ontime_pump_daily:
        friendly_name: "Pump ontime today"
        value_template: "{{ (states('sensor.irrigation_hs_pump_daily') | float) | round(2) }}"
        attribute_templates:
          start_time: "{{ (states('input_number.irrigation_start_time_pump') | int) | timestamp_custom('%d.%m.%Y %H:%M:%S') }}"
          time_formatted: >
            {% set t = states('sensor.irrigation_ontime_pump_daily') | float *60 %}
            {{ '%0.02d:%0.02d:00' | format(t // 60, t % 60) }}
          volume_m3: >
            {{ (state_attr('sensor.irrigation_ontime_zone1_daily', 'volume_m3') | float + 
              state_attr('sensor.irrigation_ontime_zone2_daily', 'volume_m3') | float + 
              state_attr('sensor.irrigation_ontime_zone3_daily', 'volume_m3') | float) | round(1) }}
          wasserkosten: >
            {{ ((state_attr('sensor.irrigation_ontime_zone1_daily', 'volume_m3') | float + 
              state_attr('sensor.irrigation_ontime_zone2_daily', 'volume_m3') | float + 
              state_attr('sensor.irrigation_ontime_zone3_daily', 'volume_m3') | float) * 3.94) | round(2) }}
          energy_kwh: "{{ (states('sensor.irrigation_ontime_pump_daily') | float * 1.02) | round(2) }}"
          stromkosten: "{{ (states('sensor.irrigation_ontime_pump_daily') | float * 1.02 *0.32) | round(2) }}"
        unit_of_measurement: "Std"
        icon_template: mdi:water-outline

# Ontime sensors
      irrigation_ontime_zone1:
        friendly_name: "Zone1 ontime"
        value_template: "{{ (states('input_number.irrigation_ontime_zone1') | float + states('sensor.irrigation_hs_zone1_daily') | float) | round(2) }}"
        attribute_templates:
          time_formatted: >
            {%- set t = states('sensor.irrigation_ontime_zone1') | float *60 %}
            {% if t > 1440 -%}
              {{ '%0d Tg. %0.02d:%0.02d:00' | format(t // 1440, ((t % 1440) // 60), t % 60) }}
            {%- else -%}
              {{ '%0.02d:%0.02d:00' | format(((t % 1440) // 60), t % 60) }}
            {%- endif %}
          volume_m3: "{{ (states('sensor.irrigation_ontime_zone1') | float * (0.8 * 1.5)) | round(1) }}"
          wasserkosten: "{{ (states('sensor.irrigation_ontime_zone1') | float * (0.8 * 1.5) * 3.94) | round(2) }}"
          energy_kwh: "{{ (states('sensor.irrigation_ontime_zone1') | float * 1.02) | round(2) }}"
          stromkosten: "{{ (states('sensor.irrigation_ontime_zone1') | float * 1.02 *0.32) | round(2) }}"
        unit_of_measurement: "Std"
        icon_template: mdi:water

      irrigation_ontime_zone2:
        friendly_name: "Zone2 ontime"
        value_template: "{{ (states('input_number.irrigation_ontime_zone2') | float + states('sensor.irrigation_hs_zone2_daily') | float) | round(2) }}"
        attribute_templates:
          time_formatted: >
            {%- set t = states('sensor.irrigation_ontime_zone2') | float *60 %}
            {% if t > 1440 -%}
              {{ '%0d Tg. %0.02d:%0.02d:00' | format(t // 1440, ((t % 1440) // 60), t % 60) }}
            {%- else -%}
              {{ '%0.02d:%0.02d:00' | format(((t % 1440) // 60), t % 60) }}
            {%- endif %}
          volume_m3: "{{ (states('sensor.irrigation_ontime_zone2') | float * (0.8 * 2)) | round(1) }}"
          wasserkosten: "{{ (states('sensor.irrigation_ontime_zone2') | float * (0.8 * 2) * 3.94) | round(2) }}"
          energy_kwh: "{{ (states('sensor.irrigation_ontime_zone2') | float * 1.02) | round(2) }}"
          stromkosten: "{{ (states('sensor.irrigation_ontime_zone2') | float * 1.02 *0.32) | round(2) }}"
        unit_of_measurement: "Std"
        icon_template: mdi:water

      irrigation_ontime_zone3:
        friendly_name: "Zone3 ontime"
        value_template: "{{ (states('input_number.irrigation_ontime_zone3') | float + states('sensor.irrigation_hs_zone3_daily') | float) | round(2) }}"
        attribute_templates:
          time_formatted: >
            {%- set t = states('sensor.irrigation_ontime_zone3') | float *60 %}
            {% if t > 1440 -%}
              {{ '%0d Tg. %0.02d:%0.02d:00' | format(t // 1440, ((t % 1440) // 60), t % 60) }}
            {%- else -%}
              {{ '%0.02d:%0.02d:00' | format(((t % 1440) // 60), t % 60) }}
            {%- endif %}
          volume_m3: "{{ (states('sensor.irrigation_ontime_zone3') | float * 0.5) | round(1) }}"
          wasserkosten: "{{ (states('sensor.irrigation_ontime_zone3') | float * 0.5 * 3.94) | round(2) }}"
          energy_kwh: "{{ (states('sensor.irrigation_ontime_zone3') | float * 0.5) | round(2) }}"
          stromkosten: "{{ (states('sensor.irrigation_ontime_zone3') | float * 0.5 *0.32) | round(2) }}"
        unit_of_measurement: "Std"
        icon_template: mdi:water

      irrigation_ontime_pump:
        friendly_name: "Pump ontime"
        value_template: "{{ (states('input_number.irrigation_ontime_pump') | float + states('sensor.irrigation_hs_pump_daily') | float) | round(2) }}"
        attribute_templates:
          time_formatted: >
            {%- set t = states('sensor.irrigation_ontime_pump') | float *60 %}
            {% if t > 1440 -%}
              {{ '%0d Tg. %0.02d:%0.02d:00' | format(t // 1440, ((t % 1440) // 60), t % 60) }}
            {%- else -%}
              {{ '%0.02d:%0.02d:00' | format(((t % 1440) // 60), t % 60) }}
            {%- endif %}
          volume_m3: >
            {{ (state_attr('sensor.irrigation_ontime_zone1', 'volume_m3') | float + 
              state_attr('sensor.irrigation_ontime_zone2', 'volume_m3') | float + 
              state_attr('sensor.irrigation_ontime_zone3', 'volume_m3') | float) | round(1) }}
          wasserkosten: >
            {{ ((state_attr('sensor.irrigation_ontime_zone1', 'volume_m3') | float + 
              state_attr('sensor.irrigation_ontime_zone2', 'volume_m3') | float + 
              state_attr('sensor.irrigation_ontime_zone3', 'volume_m3') | float) * 3.94) | round(2) }}
          energy_kwh: "{{ (states('sensor.irrigation_ontime_pump') | float * 1.02) | round(2) }}"
          stromkosten: "{{ (states('sensor.irrigation_ontime_pump') | float * 1.02 *0.32) | round(2) }}"
        unit_of_measurement: "Std"
        icon_template: mdi:water

      irrigation_last_irrigated_time:
        friendly_name: "Last irrigation cycle ended"
        value_template: >
          {%- set date = states('input_number.irrigation_last_irrigated_time') | int %}
          {% set weekdays = ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"] %}
          {% set weekdays_short = ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"] %}
          {% set months = ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "Nowember", "Dezember"] %}
          {% set months_short = ["Jan", "Feb", "Mrz", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Now", "Dez"] %}
          {% set w = date | timestamp_custom("%w") | int %}
          {% set m = date | timestamp_custom("%m") | int -%}
          {{ weekdays_short[w] }} {{ date | timestamp_custom("%d") }} {{ months_short[m-1] }} um {{ date | timestamp_custom("%H:%M") }}
        icon_template: 'mdi:update'

# History sensors Zone Times
  - platform: history_stats
    name: irrigation_hs_zone1_daily
    entity_id: group.irrigation_status_zone1
    state: "on"
    type: time
    start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: irrigation_hs_zone2_daily
    entity_id: group.irrigation_status_zone2
    state: "on"
    type: time
    start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: irrigation_hs_zone3_daily
    entity_id: group.irrigation_status_zone3
    state: "on"
    type: time
    start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: irrigation_hs_pump_daily
    entity_id: switch.pump
    state: "on"
    type: time
    start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
    end: "{{ now() }}"

# Input_Numbers #####################################################
input_number:
# Zones statistics
  irrigation_ontime_zone1:
    min: 0
    max: 50000
    name: On time Zone 1
    step: 0.001
    mode: box
    icon: mdi:camera-timer
    unit_of_measurement: "Std"

  irrigation_ontime_zone2:
    min: 0
    max: 50000
    name: On time Zone 2
    step: 0.001
    mode: box
    icon: mdi:camera-timer
    unit_of_measurement: "Std"

  irrigation_ontime_zone3:
    min: 0
    max: 50000
    name: On time Zone 3
    step: 0.001
    mode: box
    icon: mdi:camera-timer
    unit_of_measurement: "Std"

  irrigation_ontime_pump:
    min: 0
    max: 50000
    name: On time pump
    step: 0.001
    mode: box
    icon: mdi:camera-timer
    unit_of_measurement: "Std"

# Start irrigation
  irrigation_start_time_zone1:
    min: 0
    max: 2147483647
    mode: box
    name: Zone1 start time
    icon: mdi:clock-start

  irrigation_start_time_zone2:
    min: 0
    max: 2147483647
    mode: box
    name: Zone2 on time
    icon: mdi:clock-start

  irrigation_start_time_zone3:
    min: 0
    max: 2147483647
    mode: box
    name: Zone3 start time
    icon: mdi:clock-start

  irrigation_start_time_pump:
    min: 0
    max: 2147483647
    mode: box
    name: Pump start time
    icon: mdi:clock-start

  irrigation_last_irrigated_time:
    min: 0
    max: 2147483647
    mode: box
    name: Pump last irrigated time
    icon: mdi:clock-start

# Automations #######################################################
automation:
# Calculate irrigation ontime Zone 1
  - id: irrigation_set_start_time
    alias: Irrigation - Set start time
    description: Irrigation - Set start time
    mode: parallel

    trigger:
    - platform: state
      entity_id:
        - group.irrigation_status_zone1
        - group.irrigation_status_zone2
        - group.irrigation_status_zone3
        - switch.pump
      from: "off"
      to: "on"

    action:
    - service: input_number.set_value
      data:
        entity_id: >
          {% if 'zone1' in trigger.entity_id %}
            input_number.irrigation_start_time_zone1
          {% elif 'zone2' in trigger.entity_id %}
            input_number.irrigation_start_time_zone2
          {% elif 'zone3' in trigger.entity_id %}
            input_number.irrigation_start_time_zone3
          {% else %}
            input_number.irrigation_start_time_pump
          {% endif %}
        value: "{{ as_timestamp(now()) | int }}"

# Sum daily and total statistics
  - id: irrigation_daily_to_total
    alias: Irrigation daily to total
    trigger:
    - platform: time
      at: "23:59:55"

    action:
    - service: input_number.set_value
      data:
        entity_id: input_number.irrigation_ontime_zone1
        value: "{{ states('input_number.irrigation_ontime_zone1') | float + states('sensor.irrigation_hs_zone1_daily') | float }}"

    - service: input_number.set_value
      data:
        entity_id: input_number.irrigation_ontime_zone2
        value: "{{ states('input_number.irrigation_ontime_zone2') | float + states('sensor.irrigation_hs_zone2_daily') | float }}"

    - service: input_number.set_value
      data:
        entity_id: input_number.irrigation_ontime_zone3
        value: "{{ states('input_number.irrigation_ontime_zone3') | float + states('sensor.irrigation_hs_zone3_daily') | float }}"

    - service: input_number.set_value
      data:
        entity_id: input_number.irrigation_ontime_pump
        value: "{{ states('input_number.irrigation_ontime_pump') | float + states('sensor.irrigation_hs_pump_daily') | float }}"

# Update the last time an irrigation cycle ended ####################
  - id: irrigation_update_the_last_time_a_cycle_ended
    alias: Irrigation - Update the last time a cycle ended
    mode: parallel

    trigger:
      - platform: state
        entity_id:
          - group.irrigation_status_zone1
          - group.irrigation_status_zone2
          - group.irrigation_status_zone3
          - switch.pump
        from: "on"
        to: "off"

    action:
      - service: input_number.set_value
        data:
          entity_id: input_number.irrigation_last_irrigated_time
          value: "{{ as_timestamp(now()) | int }}"

# Notify when valve and pump changed status
  - id: irrigation_notify
    alias: Irrigation - Notify
    mode: parallel

    trigger:
    - platform: state
      entity_id:
        - group.irrigation_status_zone1
        - group.irrigation_status_zone2
        - group.irrigation_status_zone3
        - switch.pump
      from: "on"
      to: "off"
#      for: '00:00:02'

    - platform: state
      entity_id:
        - group.irrigation_status_zone1
        - group.irrigation_status_zone2
        - group.irrigation_status_zone3
        - switch.pump
      from: "off"
      to: "on"
#      for: '00:00:02'

#    condition:
#    - condition: template
#      value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"

    action:
    - service: notify.telegram_schick_home
      data:
        title: 💦 Bewässerung
        message: >
          {% if trigger.to_state.state == 'on' %}
            Start *{{ trigger.from_state.attributes.friendly_name}}*
          {% else %}
            Ende *{{ trigger.from_state.attributes.friendly_name}}*
          {% endif %}

# Customize #########################################################
homeassistant:
  customize:

    sensor.irrigation_ontime_zone1_daily:
      friendly_name: "Bewässerung Hinten (Heute)"
    sensor.irrigation_ontime_zone2_daily:
      friendly_name: "Bewässerung Vorne (Heute)"
    sensor.irrigation_ontime_zone3_daily:
      friendly_name: "Hahnoffnung (Heute)"
    sensor.irrigation_ontime_pump_daily:
      friendly_name: "Pumpennutzung (Heute)"

    sensor.irrigation_ontime_zone1:
      friendly_name: "Bewässerung Hinten"
    sensor.irrigation_ontime_zone2:
      friendly_name: "Bewässerung Vorne"
    sensor.irrigation_ontime_zone3:
      friendly_name: "Hahnoffnung"
    sensor.irrigation_ontime_pump:
      friendly_name: "Pumpennutzung"

    sensor.irrigation_last_irrigated_time:
      friendly_name: "Bewässerung beendet"

    group.irrigation_status_zone1:
      friendly_name: "Hinterhof"
    group.irrigation_status_zone2:
      friendly_name: "Vorderhof"
    group.irrigation_status_zone3:
      friendly_name: "Hahn"
