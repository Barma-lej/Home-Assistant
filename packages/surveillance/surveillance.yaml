# Recorder ##########################################################
#recorder:
#  exclude:
#    entities:
#      - automation.camera_upload_video_to_telegram
#
## Logbook ###########################################################
#logbook:
#  exclude:
#    entities:
#      - automation.camera_upload_video_to_telegram

# Automations #######################################################
automation:
  # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –≤ Telegram
  - id: automation.camera_upload_video_to_telegram
    alias: Camera Upload Video to Telegram
    description: –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –≤ Telegram
    mode: parallel
    trigger:
      platform: event
      event_type: folder_watcher
      event_data:
        event_type: created

    condition:
      condition: template
      value_template: "{{ '.mp4' in trigger.event.data.path }}"

    action:
      - delay: 00:00:55 # –ß—Ç–æ–±—ã —Ñ–∞–π–ª —É—Å–ø–µ–ª –∑–∞–ø–∏—Å–∞—Ç—å—Å—è
      - service: notify.telegram_schick_home
        data:
          title: Surveillance
          message: "Bewegung erkannt!"
          data:
            video:
              - file: "{{ trigger.event.data.path }}"
                caption: >-
                  {% if 'cam1' in trigger.event.data.folder %}
                    üèÉ *Terrasse* Bewegung
                  {% elif 'cam2' in trigger.event.data.folder %}
                    üöó *Garage* Bewegung
                  {% elif 'cam3' in trigger.event.data.folder %}
                    üè† *Einfahrt* Bewegung
                  {% else %}
                    üèÉ *Bewegung erkannt!*
                  {% endif -%}
                timeout: 1000

  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–Ω–∏–º–∫–∞ –≤ Telegram
  - id: automation.camera_upload_picture_to_telegram
    alias: Camera Upload Picture to Telegram
    description: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–Ω–∏–º–∫–∞ –≤ Telegram
    mode: parallel
    trigger:
      platform: event
      event_type: folder_watcher
      event_data:
        event_type: closed

    condition:
      condition: template
      value_template: "{{ '.jpg' in trigger.event.data.path }}"

    action:
      - service: notify.telegram_schick_home
        data:
          title: Surveillance
          message: "Bewegung erkannt!"
          data:
            photo:
              - file: "{{ trigger.event.data.path }}"
                caption: >-
                  {% if 'cam1' in trigger.event.data.folder %}
                    üèÉ *Terrasse* Bewegung
                  {% elif 'cam2' in trigger.event.data.folder %}
                    üöó *Garage* Bewegung
                  {% elif 'cam3' in trigger.event.data.folder %}
                    üè† *Einfahrt* Bewegung
                  {% else %}
                    üèÉ *Bewegung erkannt!*
                  {% endif -%}
    # - service: shell_command.delete_file
    #   data:
    #     file_path: "{{ trigger.event.data.path }}"

# Script ############################################################
#script:
########################################
## Script to record and sent motion video to telegram
## is passed:
##   {{ camera }} Camera entity_id
##   {{ file }} Record file full name
##   {{ caption }}
########################################
#  record_motion:
#    sequence:
#    - service: camera.record
#      data:
#        entity_id: camera.{{ camera }}
#        filename: "{{ file }}"
#        lookback: 30
#        duration: 30
##    - delay: 00:00:45
##    - service: notify.telegram_schick_home
##      data:
##        title: Surveillance
##        message: "Bewegung erkannt!"
##        data:
##          video:
##            - file: "{{ file }}"
##              caption: "{{ caption }}"
##    - service: shell_command.delete_file
##      data:
##        file_path: "{{ file }}"

# type: custom:webrtc-camera
# entity: camera.reolink_e1_zoom_profile000_mainstream
# webrtc: true
# muted: false
# ptz:
#   service: onvif.ptz
#   data_left:
#     entity_id: camera.reolink_e1_zoom_profile001_substream
#     pan: LEFT
#     move_mode: ContinuousMove
#   data_right:
#     entity_id: camera.reolink_e1_zoom_profile001_substream
#     pan: RIGHT
#     move_mode: ContinuousMove
#   data_up:
#     entity_id: camera.reolink_e1_zoom_profile001_substream
#     tilt: UP
#     move_mode: ContinuousMove
#   data_down:
#     entity_id: camera.reolink_e1_zoom_profile001_substream
#     tilt: DOWN
#     move_mode: ContinuousMove
#   data_zoom_in:
#     entity_id: camera.reolink_e1_zoom_profile001_substream
#     zoom: ZOOM_IN
#     move_mode: ContinuousMove
#   data_zoom_out:
#     entity_id: camera.reolink_e1_zoom_profile001_substream
#     zoom: ZOOM_OUT
#     move_mode: ContinuousMove
